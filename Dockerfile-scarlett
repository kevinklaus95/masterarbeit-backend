# To build go to this directory and use 
# docker build -t scarlett .
#
# To run without linking data to own harddrive use
# docker run -p 8080:8080 scarlett
# To run with linking data create Scarlett-Data folder in home and add
# docker run -p 8080:8080 -v ~/Scarlett-Data/db:/data/db -v ~/Scarlett-Data/app/lessoncontent:/app/static/lessoncontent scarlett
#
# To End look at running docker processes
# docker ps
# And use 
# docker stop <Container ID>

# Base Image Ubuntu
FROM ubuntu:16.04

# Install requirements
RUN apt update
RUN apt install -y python3 python3-dev python3-pip xfonts-utils xfonts-75dpi xfonts-base libfontenc1 libxfont1 xfonts-encodings wget python-dev libjpeg-dev libfreetype6-dev zlib1g-dev mongodb-server

RUN wget https://downloads.wkhtmltopdf.org/0.12/0.12.4/wkhtmltox-0.12.4_linux-generic-amd64.tar.xz
RUN tar xvf wkhtmltox-0.12.4_linux-generic-amd64.tar.xz
RUN mv wkhtmltox/bin/wkhtmlto* /usr/bin
RUN apt-get install -y openssl build-essential libssl-dev libxrender-dev git-core libx11-dev libxext-dev libfontconfig1-dev libfreetype6-dev fontconfig

RUN ln -s /usr/lib/x86_64-linux-gnu/libjpeg.so /usr/lib
RUN ln -s /usr/lib/x86_64-linux-gnu/libfreetype.so /usr/lib
RUN ln -s /usr/lib/x86_64-linux-gnu/libz.so /usr/lib

# Copy project code
WORKDIR /app
ADD . /app

RUN pip3 install --upgrade pip
RUN pip3 install -r requirements.txt

# Make ports available to the world outside this container
RUN mkdir -p /data/db
EXPOSE 27017
EXPOSE 8080

# Define environment variable
#ENV NAME scarlett

# Run app.py when the container launches
CMD sh Docker_internal_startserver.sh